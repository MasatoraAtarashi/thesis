@misc{aws_iot,
  author = "AWS IoT",
  url = "{https://docs.aws.amazon.com/ja_jp/iot/latest/developerguide/what-is-aws-iot.html}"
}

@misc{sakura_io,
  author = "sakura.io",
  url = "{sakura.io}"
}

@misc{esp32,
  author = "Espressif Systems",
  title = "{ESP32 Series Datasheet}",
  year = 2018,
  url = "{https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf}"
}

@techreport{rfc7228,
  author = "C. Bormann and M. Ersue and A. Keranen",
  title = "{Terminology for Constrained-Node Networks}",
  type = "{RFC}",
  number = "7228",
  institution = "{Internet Engineering Task Force}",
  publisher = "{RFC Editor}",
  year = 2014,
  month = "May",
  issn = "{2070-1721}",
  pages = "1-17",
  doi = "{10.17487/RFC7228}",
  howpublished = "{Internet Requests for Comments}",
  url = "{http://www.rfc-editor.org/rfc/rfc7228.txt}"
}

@book{jvms,
    author = "Tim Lindholm and Frank Yellin and 村上 雅章",
    title = "Java{\texttrademark}仮想マシン仕様",
    edition = "第2版",
    publisher = "ピアソン・エデュケーション",
    isbn = "ISBN489471356X",
    year = 2001,
}

@book{ieee754,
  title={{IEEE standard for binary floating-point arithmetic}},
  booktitle={{IEEE standard for binary floating-point arithmetic}},
  publisher={Institute of Electrical and Electronics Engineers},
  year={1985}
}

@inproceedings{webassembly,
  abstract = {The maturation of theWeb platform has given rise to sophis- ticated and demandingWeb applications such as interactive 3D visualization, audio and video software, and games.With that, efficiency and security of code on theWeb has become more important than ever. Yet JavaScript as the only built- in language of the Web is not well-equipped to meet these requirements, especially as a compilation target. Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstrac- tion over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal se- mantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations.},
  author = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, JF},
  booktitle = {Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation - PLDI 2017},
  doi = {10.1145/3062341.3062363},
  file = {:Users/aky/Library/Application Support/Mendeley Desktop/Downloaded/Haas et al. - 2017 - Bringing the web up to speed with WebAssembly.pdf:pdf},
  isbn = {9781450349888},
  issn = {03621340},
  pages = {185--200},
  title = {{Bringing the web up to speed with WebAssembly}},
  url = {http://dl.acm.org/citation.cfm?doid=3062341.3062363},
  year = {2017}
}

@article{ecma2018,
  author = {Ecma International},
  title = {{ECMAScript{\textregistered} 2018 Language Specification}},
  year = {2019}
}

@article{__japanese,
  author = "ほげ山太郎 and ほげ山次郎",
  yomi = "ほげやまたろう",
  title = "ほげほげ理論のHCI分野への応用",
  journal = "ほげほげ学会論文誌",
  volume = "31",
  number = "3",
  pages = "194-201",
  year = "2009",
}

@inproceedings{__english,
  author = "Taro Hogeyama and Jiro Hogeyama",
  title = "The Theory of Hoge",
  booktitle = "The Proceedings of The Hoge Society",
  year = "2008"
}

@misc{__url,
  author = "@kurokobo",
  url = "{http://wiki.kurokobo.com/index.php?LaTeX}"
}

